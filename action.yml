name: "OpenWrt ImageBuilder"
description: "Build OpenWrt images via the Image Builder"
author: aparcar

inputs:
  release:
    description: 'Which Release to use'
    required: true
    default: 'main'
  target-name:
    description: 'Which Target to use (e.g. x86-64)'
    required: true
outputs:
  target:
    description: "primary target name (e.g. x86)"
    value: ${{ steps.outputs.outputs.target }}
  subtarget:
    description: "subtarget name (e.g. 64)"
    value: ${{ steps.outputs.outputs.subtarget }}

runs:
  using: 'composite'
  steps:

    - run: |
        echo "artifacts_dir=${ARTIFACTS_DIR:-$GITHUB_WORKSPACE}" >> "$GITHUB_OUTPUT"
        echo "keys_dir=${KEYS_DIR:-$GITHUB_WORKSPACE/keys}" >> "$GITHUB_OUTPUT"
        echo "files_dir=${KEYS_DIR:-$GITHUB_WORKSPACE/files}" >> "$GITHUB_OUTPUT"
      shell: bash
      id: inputs

    - run: |
        echo "subtarget=${TARGET#*-}" >> "$GITHUB_OUTPUT"
        echo "target=${TARGET%-*}" >> "$GITHUB_OUTPUT"
      env:
        TARGET: ${{ inputs.target-name }}
      shell: bash
      id: outputs

    # - run: mkdir -p ${{ steps.inputs.outputs.keys_dir }}
    #   shell: bash
    - run: ls -lR ${{ steps.inputs.outputs.keys_dir }} || true
      shell: bash
    - run: sudo chown -R 1000:1000 ${{ steps.inputs.outputs.artifacts_dir }} ${{ steps.inputs.outputs.keys_dir }}
      shell: bash
    - run: sudo chown -R 1000:1000 ${{ steps.inputs.outputs.artifacts_dir }} ${{ steps.inputs.outputs.keys_dir }}
      shell: bash
    - name: Set up Docker QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build Docker container image
      uses: docker/build-push-action@v6
      env:
        DOCKER_BUILD_SUMMARY: false
        ARCH: ${{ inputs.target-name }}-${{ inputs.release }}
      with:
        push: false
        tags: imagebuilder
        context: ${{ github.action_path }}
        build-args: |
          CONTAINER
          ARCH
        cache-to: type=gha,mode=max,scope=${{ env.CONTAINER }}-${{ env.ARCH }}
        cache-from: type=gha,scope=${{ env.CONTAINER }}-${{ env.ARCH }}
        load: true

    - name: docker run
      run: |
        MOUNT_OPTIONS=""
        if [[ -n "$FILES_DIR" ]]; then
          MOUNT_OPTIONS+="-v ${FILES_DIR}:/files "
        fi
        if [[ -n "$KEYS_DIR" ]]; then
          MOUNT_OPTIONS+="-v ${{ steps.inputs.outputs.keys_dir }}:/keys "
        fi
        echo "$MOUNT_OPTIONS"
        docker run --rm \
          --env PROFILE \
          --env PACKAGES \
          --env FILES_DIR \
          --env EXTRA_IMAGE_NAME \
          --env DISABLED_SERVICES \
          --env ADD_LOCAL_KEY \
          --env ROOTFS_PARTSIZE \
          --env NO_DEFAULT_REPOS \
          --env CUSTOM_REPO \
          --env KEYS_DIR \
          -v ${{ steps.inputs.outputs.artifacts_dir }}:/artifacts \
          $MOUNT_OPTIONS \
          imagebuilder
      shell: bash
    - run: sudo chown -R --reference=${{ steps.inputs.outputs.artifacts_dir }}/.. ${{ steps.inputs.outputs.artifacts_dir }}
      shell: bash
      if: always()
